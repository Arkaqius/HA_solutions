### DOOR CONTROLLERS START
# Detailed Help for Creating Configuration:
# 1. Module and Class (Required):
#    - module: The name of the Python module file (without .py extension) where the DoorController class is defined.
#    - class: The name of the class to instantiate, which should be DoorController in this case.
#
# 2. Logging Level (Optional):
#    - log_level: Sets the verbosity of the logs. Use DEBUG for detailed logging during development and troubleshooting.
#
# 3. Inputs:
#    - close_sensor (Optional): Entity ID of the binary sensor that indicates when the door is fully closed.
#    - open_sensor (Optional): Entity ID of the binary sensor that indicates when the door is fully open.
#    - input_button_open (Required): Entity ID of the input button used in the Home Assistant Lovelace UI to open the door.
#    - input_button_close (Required): Entity ID of the input button used in the Home Assistant Lovelace UI to close the door.
#    - external_button (Required): Entity ID of the input button mapped to a physical external button to trigger door actions.
#    - input_button_pedestrian (Optional): Entity ID of the input button used in the Home Assistant Lovelace UI to open the door for pedestrian access.
#
# 4. Outputs:
#    - door_switch (Required): Entity ID of the switch that controls the door or gate motor (usually a relay).
#    - door_status_sensor (Required): Entity ID of the sensor that represents the door status (created and managed by the app).
#    - health_status_sensor (Required): Entity ID of the sensor that represents the app's health status (created and managed by the app).
#
# 5. Calibration (Optional):
#    - timeout: Time in seconds to wait for door operation to complete before considering it a fault. Adjust this based on your door or gate's typical operation time.
#    - pedestrian_open_timeout (Optional): Time in seconds to open the gate just enough for pedestrian access.
#
# 6. Friendly Name (Required):
#    - friendly_name: A friendly name for created entities.
#
# Example Usage:
# - For a garage door with physical contact sensors, you configure both close_sensor and open_sensor.
# - For a gate without physical sensors, you can omit the sensor configurations and just use input buttons and a relay.
# - external_button can be used to map a physical button to the Home Assistant input button, allowing for physical control of the door or gate.

# Garage Door Controller Configuration
GarageDoorController:
  module: DoorController  # Specifies the module where the DoorController class is located
  class: DoorController   # Specifies the class to be instantiated
  log_level: DEBUG        # Sets the logging level for this app
  friendly_name: "Garage Door"  # A friendly name for the whole app to be used in Home Assistant UI

  # Inputs
  close_sensor: binary_sensor.garage_gatedoorlow_contact_contact # Physical contact sensor for closed position (Optional)
  open_sensor: binary_sensor.garage_gatedoorhigh_contact_contact # Physical contact sensor for open position (Optional)
  input_button_open: input_button.garage_open_door # Template input button for opening the door from LoveLace UI (Required)
  input_button_close: input_button.garage_close_door # Template input button for closing the door from LoveLace UI (Required)
  external_button: input_button.garage_external_button # Template input button for binding to a physical external button (Required)


  # Outputs
  door_switch: switch.sonoff_basic_relay # Physical relay to control the door motor (Required)
  door_status_sensor: sensor.garage_door_contact # Template sensor for displaying door status on LoveLace UI, auto-generated by the app (Required)
  health_status_sensor: sensor.garage_door_app_health # Template sensor for monitoring app health, auto-generated by the app (Required)

  # Calibration
  timeout: 20  # Timeout in seconds for door operation, used for diagnostics (Optional)

# External Gate Controller Configuration
ExternalGateController:
  module: DoorController  # Specifies the module where the DoorController class is located
  class: DoorController   # Specifies the class to be instantiated
  log_level: INFO        # Sets the logging level for this app
  friendly_name: "External Gate"  # A friendly name for the whole app to be used in Home Assistant UI

  # Inputs
  door_switch: switch.garage_gate_relay # Physical relay to control the gate motor (Required)
  input_button_open: input_button.externalgate_open_door # Template input button for opening the gate from LoveLace UI (Required)
  input_button_close: input_button.externalgate_close_door # Template input button for closing the gate from LoveLace UI (Required)
  external_button: input_button.externalgate_external_button # Template input button for binding to a physical external button (Required)
  input_button_pedestrian: input_button.externalgate_pedestrian_open # Template input button for opening the gate for pedestrian access (Optional)

  # Outputs
  door_status_sensor: sensor.externalgate_contact # Template sensor for displaying gate status on LoveLace UI, auto-generated by the app (Required)
  health_status_sensor: sensor.externalgate_app_health # Template sensor for monitoring app health, auto-generated by the app (Required)

  # Calibration
  timeout: 30  # Timeout in seconds for gate operation, used for diagnostics (Optional)
  pedestrian_open_timeout: 5  # Time in seconds to open the gate just enough for pedestrian access (Optional)

### DOOR CONTROLLERS END